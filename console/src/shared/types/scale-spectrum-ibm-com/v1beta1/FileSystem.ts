/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Filesystem is the Schema for the filesystems API
 */
export interface FileSystem {
  /**
   * APIVersion defines the versioned schema of this representation of an object.
   * Servers should convert recognized schemas to the latest internal value, and
   * may reject unrecognized values.
   * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents.
   * Servers may infer this from the endpoint the client submits requests to.
   * Cannot be updated.
   * In CamelCase.
   * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  metadata?: {};
  /**
   * spec defines the desired state of Filesystem
   */
  spec?: {
    /**
     * If specified, describes the file system to be a local filesystem.
     */
    local?: {
      /**
       * blockSize is the desired block size (default: 4M)
       */
      blockSize?:
        | "64k"
        | "128k"
        | "256k"
        | "512k"
        | "1m"
        | "2m"
        | "4m"
        | "8m"
        | "16m"
        | "256K"
        | "512K"
        | "1M"
        | "2M"
        | "4M"
        | "8M"
        | "16M";
      /**
       * pools is a list of storage configurations that will make up a filesystem.
       * At least a pool with name 'system' must be specified.
       *
       * @minItems 1
       * @maxItems 8
       */
      pools:
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ]
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ]
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ]
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ]
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ]
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ]
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ]
        | [
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            },
            {
              /**
               * disks is a list of local disk names to be included in this pool.
               * All local disks that are specified here must have the same "type" ("shared" or "unshared") as this filesystem has defined in the spec.
               */
              disks: string[];
              /**
               * name is the desired name of this pool (default: system)
               */
              name?: string;
            }
          ];
      /**
       * replication is the number of replicas to create for each data/metadata block that is written to the filesystem.
       * For type unshared only 3-way is allowed.
       */
      replication: "1-way" | "2-way" | "3-way";
      /**
       * type defines the type of the local filesystem to create.
       * Type "shared" is used for disks that have a path to multiple core pods.
       * Type "unshared" is used for disks that have a path to only one core pod.
       * All local disks to be used for this filesystem must have the same type.
       */
      type: "shared" | "unshared";
    };
    /**
     * If specified, describes the file system to be remote mounted filesystem.
     */
    remote?: {
      /**
       * It is the name of the 'remotecluster' custom resource.
       */
      cluster: string;
      /**
       * It is the name of the filesystem on the remote cluster to mount.
       */
      fs: string;
    };
    /**
     * The SELinux context to be applied to the filesystem mount.
     *
     *
     * If unspecified, the default context will prevent kubelet from relabeling volumes by
     * mounting the filesystem with a shared container context.
     *
     *
     * The shared container context may not be suitable for users intending to access
     * container volumes outside of containerized environments. A context can be explicitly
     * set to customize the mount context to something accessible by both containerized
     * and non-containerized workloads.
     *
     *
     * A user can disable setting of the SELinux context for the filesystem mount by
     * specifying an empty {} seLinuxOptions field.
     *
     *
     * Disabling the SELinux context mount will return back to the default volume relabeling
     * behavior done by kubelet.
     */
    seLinuxOptions?: {
      /**
       * Level is SELinux level label that applies to the container.
       */
      level?: string;
      /**
       * Role is a SELinux role label that applies to the container.
       */
      role?: string;
      /**
       * Type is a SELinux type label that applies to the container.
       */
      type?: string;
      /**
       * User is a SELinux user label that applies to the container.
       */
      user?: string;
    };
    /**
     * If specified, describes the file system to be a vdiskNSD filesystem.
     */
    vdiskNSD?: {
      /**
       * replication is the number of replicas to create for each data/metadata block that is written to the filesystem (default: 1-way).
       * When setting up a stretch cluster, please set it as "2-way".
       */
      replication?: "1-way" | "2-way";
      /**
       * tiebreaker defines the tiebreaker NSD for the stretched filesystem
       */
      tiebreaker?: {
        /**
         * device defines the block device name in tiebreaker node
         */
        device: string;
        /**
         * nodeDaemonName defines the tiebreaker node daemon name
         */
        nodeDaemonName: string;
      };
      /**
       * vdisksets defines the desired state of vdisksets that comprise the vdiskNSD filesystem
       */
      vdiskSets?: {
        /**
         * This is the file system block size (vdisk track size) for members of the vdisk set.
         * It is constrained by the selected RAID code.
         * Valid values for 3WayReplication and 4WayReplication are 256k, 512k, 1m, or 2m.
         * Valid values for 4+2P and 4+3P are 512k, 1m, 2m, 4m, or 8m. Valid values for 8+2P and 8+3P are 512k, 1m, 2m, 4m, 8m, or 16m.
         */
        blockSize?:
          | "256k"
          | "512k"
          | "1m"
          | "2m"
          | "4m"
          | "8m"
          | "16m"
          | "256K"
          | "512K"
          | "1M"
          | "2M"
          | "4M"
          | "8M"
          | "16M";
        /**
         * All recovery groups for which this vdisk set is defined must have a declustered array with this name where this vdisk set's members are created.
         * The expectation is that a vdisk set extends across structurally identical recovery groups where the named declustered array has the same characteristics in each recovery group.
         * If there is only one user declustered array in each recovery group, it is named DA1 and this is the default.
         * If there is more than one user declustered array in a recovery group, there is no default and a declustered array name must be specified.
         */
        declusteredArray?: string;
        /**
         * This is the failure group number of all vdisks defined in the vdiskset. The default value is 1 if it is omitted.
         */
        failureGroup?: number;
        /**
         * This is the IBM Spectrum Scale file system data usage for the NSD.
         * Valid values are dataAndMetadata, metadataOnly, and dataOnly.
         * The default is dataAndMetadata.
         */
        nsdUsage?: "dataAndMetadata" | "metadataOnly" | "dataOnly";
        /**
         * This is the vdisk RAID code for members of the vdisk set.
         * Valid values are: 3WayReplication, 4WayReplication, 4+2P, 4+3P, 8+2P, or 8+3P
         */
        raidCode?: "3WayReplication" | "4WayReplication" | "4+2P" | "4+3P" | "8+2P" | "8+3P";
        /**
         * One or more recovery groups, each of which contributes one member vdisk NSD to the vdisk set.
         */
        recoveryGroups?: string[];
        /**
         * The vdisk set size is the desired aggregate size of the vdisk set members in one recovery group.
         * The set size can be specified as a percentage (whole numbers from 1% to 100% using the % suffix) or as a number of bytes (a number, optionally followed by one of the base 2 suffixes K, M, G, or T).
         * If the vdisk set size is given as a percentage, it specifies the raw size to use from the declustered array including RAID code redundancy.
         * If the vdisk set size is given as a number of bytes, it specifies the desired usable size of the vdisk set excluding RAID code redundancy.
         * The vdisk set size is used to calculate the usable size of a single vdisk NSD member of the vdisk set in one recovery group.
         * It is this calculated usable size that becomes part of the vdisk set definition, so if the size of a declustered array should ever change, the size of the individual member vdisk NSDs remains constant.
         */
        setSize?: string;
        /**
         * If the NSD usage is dataAndMetadata or metadataOnly, the storage pool value must be system and does not need to be specified.
         * If the NSD usage is dataOnly, the storage pool must be specified and the value may not be system.
         */
        storagePool?: string;
      }[];
    };
  };
  /**
   * status defines the observed state of Filesystem
   */
  status?: {
    conditions?: {
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: "True" | "False" | "Unknown";
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       * ---
       * Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
       * useful (see .node.status.conditions), the ability to deconflict is important.
       * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
       */
      type: string;
    }[];
    /**
     * maintenanceMode indicates if the filesystem maintenance mode is enabled.
     */
    maintenanceMode?: "enabled" | "disabled" | "unknown" | "not supported";
    /**
     * pools displays status of the filesystem pools
     */
    pools?: {
      /**
       * diskCount is the number of localdisk objects in this pool. Used only if spec.local.replication is "1-way".
       */
      diskCount?: number;
      /**
       * disks lists the names of the localdisk objects in this pool. Used only if the file system is not replicated (means if spec.local.replication is "1-way").
       */
      disks?: string;
      /**
       * failureGroups shows the status of disks separated by failure groups. Used only if the file system is replicated (means if spec.local.replication is "2-way" or "3-way").
       */
      failureGroups?: {
        /**
         * diskCount is the number of localdisk objects in this failure group. Used only if the file system is replicated (means if spec.local.replication is not "1-way").
         */
        diskCount?: number;
        /**
         * disks lists the names of the localdisk objects in this failure group. Used only if the file system is replicated (means if spec.local.replication is not "1-way").
         */
        disks?: string;
        /**
         * failureGroup is the number of this failure group
         */
        failureGroup?: string;
        /**
         * totalDiskSize is the sum of all disk sizes in this failure group. Used only if the file system is replicated (means if spec.local.replication is not "1-way").
         */
        totalDiskSize?: string;
      }[];
      /**
       * name is the desired name of this pool (default: system)
       */
      name?: string;
      /**
       * totalDiskSize is the sum of all disk sizes in this pool. Used only if spec.local.replication is "1-way".
       */
      totalDiskSize?: string;
    }[];
    /**
     * seLinuxOptions indicates the currently configured mount context of the filesystem.
     */
    seLinuxOptions?: {
      /**
       * Level is SELinux level label that applies to the container.
       */
      level?: string;
      /**
       * Role is a SELinux role label that applies to the container.
       */
      role?: string;
      /**
       * Type is a SELinux type label that applies to the container.
       */
      type?: string;
      /**
       * User is a SELinux user label that applies to the container.
       */
      user?: string;
    };
    uid?: string;
    version?: string;
  };
}
